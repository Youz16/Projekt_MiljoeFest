@page "/"
@using MiljoeFest.Shared;
@inject HttpClient Http
@inject StateContainer StateContainer;
<PageTitle>Miljøfest | Forside</PageTitle>

<div class="jumbotron">
    <h1 class="display-4">Velkommen til Miljø Fest!</h1>
    <p class="lead">Vær med til at gøre en forskel for årets festival ved at være frivillig, hvor du varetager valgfrie opgaver!</p>
    <hr class="my-4">
    <p><em>Du får også mulighed for at være en del af interne klubber som bl.a. står for frivilligbar og lign.</em></p>
    <p class="lead">
        <a class="btn btn-primary btn-lg" href="/createUser" role="button">Opret som frivillig</a>
    </p>
</div>

<!--A table is created, with given headings for the extracted data-->
<table class="table">
    <thead>
        <tr>
            <th>Bruger ID</th>
            <th>Navn</th>
            <th>Email</th>
            <th>Tlf.</th>
            <th>Kompetencer</th>
            <th>Fødselsdag</th>
            <th>Førstehjælp</th>
            <th>Handlinger</th>
        </tr>
    </thead>
    <tbody>
        <!--The list of users (created in the code-block) is looped through, plotting data into a table-->
        @foreach (var user in users)
        {
            <tr>
                <td>@user.UserId</td>
                <td>@user.Name</td>
                <td>@user.Email</td>
                <td>@user.Phone</td>
                <td>@user.Skills</td>
                <td>@user.BirthDay</td>
                <td>@user.FirstAid</td>
                <td>
                    <!--Button triggers AssignCurrentUser function mentioned in code-block-->
                <button class="btn btn-danger" @onclick="()=>AssignCurrentUser(user)">Select</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    // New instance of a List containing User-instances, for loading several users into the page
    List<User> users = new();

    // Upon loading the page, a list of users is retrieved
    protected override async Task OnInitializedAsync()
    {
        users = await Http.GetFromJsonAsync<List<User>>("userController/getUsers?role=1");
    }

    // Assigns values of a chosen user to the instance of StateContainer
    public void AssignCurrentUser(User user)
    {
        StateContainer.UserId = user.UserId;
        StateContainer.RoleId = user.RoleId;
        StateContainer.Name = user.Name;
        StateContainer.Department = user.Department;
        StateContainer.Email = user.Email;
        StateContainer.Phone = user.Phone;
        StateContainer.Skills = user.Skills;
        StateContainer.BirthDay = user.BirthDay;
        StateContainer.FirstAid = user.FirstAid;
    }
    }