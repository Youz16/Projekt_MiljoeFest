@page "/shiftCrud"
@using MiljoeFest.Shared;
@inject HttpClient Http
@inject StateContainer StateContainer;

<PageTitle>Miljøfest | Vagt-redigering</PageTitle>

<div class="jumbotron">
    <h1 class="display-4">Vagt-redigering</h1>


    <hr class="my-4">
</div>

<!--Creation of a div with the class "row"-->
<div class="row">
    <!--within the row, divs with the class "col-sm-4" are made, columns with given dimensions and margins-->
    <div class="col-sm-4">
         <!--Within each column, a card is appended with a body, title, some text and the EditForm-->
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Vagtoprettelse</h5>
                <p class="card-text">Du bedes udfylde alle felter herunder, og derefter klikke på knappen for at oprette en ny vagt.</p>
                
                <!--Creation of an EditForm that follows the model of Shift.cs and creates a shift in DB upon submit-->
                <EditForm Model="@s" OnValidSubmit="createShift">

                    <label>Opgaveid:</label>
                    <div>
                        <InputNumber @bind-Value="@s.AssignmentId" placeholder="OpgaveID" />
                    </div>

                    <label>Coordinator:</label>
                    <div>
                        <InputNumber @bind-Value="@StateContainer.UserId" readonly/>
                    </div>

                    <label>Lokalitet:</label>
                    <div>
                        <InputText @bind-Value="@s.Location" placeholder="Lokalitet" />
                    </div>

                    <label>Start- og sluttid:</label>
                    <div class->
                        <InputDate @bind-Value="@s.Start" min="1960-01-01" />
                    </div>
                    <div>
                        <InputDate @bind-Value="@s.End" min="1960-01-01" />
                    </div>

                    <!--Button triggers createShift function mentioned in code-block-->
                    <button type="submit" class="btn btn-success mt-3">
                        @OpretText
                    </button>
                </EditForm>
            </div>
        </div>
    </div>

    <div class="col-sm-4">
        <div class="card">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Vagtopdatering</h5>
                    <p class="card-text">Vælg venligst en vagt fra listen nedenunder, og derefter bedes du indtaste opdaterede oplysninger.</p>
                    
                    <!--Creation of an EditForm that follows the model of Shift.cs and updates the info of the chosen shift upon submit-->
                    <EditForm Model="@current" OnValidSubmit="UpdateShift">

                        <label>Vagt ID:</label>
                        <div>
                            <InputNumber @bind-Value="@current.ShiftId" placeholder="Vagt ID" />
                        </div>

                        <label>Opgave ID:</label>
                        <div>
                            <InputNumber @bind-Value="@current.AssignmentId" placeholder="Opgave ID" />
                        </div>

                        <label>Coordinator:</label>
                        <div>
                            <InputNumber @bind-Value="@current.UserId" readonly />
                        </div>

                        <label>Lokalitet:</label>
                        <div>
                            <InputText @bind-Value="@current.Location" placeholder="Lokalitet" />
                        </div>

                        <label>Start- og sluttid:</label>
                        <div>
                            <InputDate @bind-Value="@current.Start" min="1960-01-01" />
                        </div>
                        <div>
                            <InputDate @bind-Value="@current.End" min="1960-01-01" />
                        </div>
                        <label>Booked af</label>
                        <div>
                            <InputNumber @bind-Value="@current.BookedBy" />
                        </div>
                        <label>Er den booked?</label>
                        <div>
                            <InputCheckbox @bind-Value="@current.IsBooked" />
                        </div>

                        <!--Button triggers UpdateShift function mentioned in code-block-->
                        <button type="submit" class="btn btn-success mt-3">
                            @OpdaterText
                        </button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Vagtsletning</h5>
                <p class="card-text">Du bedes specificere ID'et for den bestemte vagt som ønskes slettet.</p>
                
                <!--Creation of an EditForm that follows the model of Shift.cs and deletes the shift with given info upon submit-->
                <EditForm Model="@deleteShift" OnValidSubmit="DeleteShift">
                    <label>Slet vagt med ID:</label>
                    <div>
                        <InputNumber @bind-Value="@deleteShift.ShiftId" placeholder="Vagt ID" />
                    </div>
                    
                    <!--Button triggers DeleteShift function mentioned in code-block-->
                    <button type="submit" class="btn btn-danger mt-3">
                        @deleteText
                    </button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<!--A table is created, with given headings for the extracted data-->
<table class="table mt-5">
    <thead>
        <tr>
            <th>Vagt ID</th>
            <th>Opgave ID</th>
            <th>Oprettet af</th>
            <th>Lokation</th>
            <th>Start Tidspunkt</th>
            <th>Slut Tidspunkt</th>
            <th>Booked af</th>
            <th>Er den booked</th>
        </tr>
    </thead>
    <tbody>
        <!--The list of assignments (created in the code-block) is looped through, plotting data into a table-->
        @foreach (var s in shifts)
        {
            <tr>
                <td>@s.ShiftId</td>
                <td>@s.AssignmentId</td>
                <td>@s.UserId</td>
                <td>@s.Location</td>
                <td>@s.Start</td>
                <td>@s.End</td>
                <td>@s.BookedBy</td>
                <td>@s.IsBooked</td>

                <td>
                    <!--Button triggers AssignCurrentShift function mentioned in code-block-->
                    <button class="btn btn-danger" @onclick="()=>AssignCurrentShift(s)">Select</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    public string OpretText = "Opret vagt";
    public string OpdaterText = "Opdater vagt";
    public string deleteText = "Slet vagt";

    // New instance of a List containing Shift-instances, for loading several shifts into the page
    List<Shift> shifts = new();

    // A private instance of Shift named "s", acts like a model for the EditForm
    private Shift s = new();

    // New private instance of Shift named "current"
    private Shift current = new();

    // New private instance of Shift named "deleteShift"
    private Shift deleteShift = new();

    // Upon loading the page, a list of shifts is retrieved
    protected override async Task OnInitializedAsync()
    {
        shifts = await Http.GetFromJsonAsync<List<Shift>>($"shiftController/getAllShifts");
    }

    // Assigns values to the instance of Shift named "current"
    public void AssignCurrentShift(Shift s)
    {
        current.ShiftId = s.ShiftId;
        current.AssignmentId = s.AssignmentId;
        current.UserId = s.UserId;
        current.Location = s.Location;
        current.Start = s.Start;
        current.End = s.End;
        current.BookedBy = s.BookedBy;
        current.IsBooked = s.IsBooked;
    }


    public async Task createShift()
    {
        if (StateContainer.RoleId == 1)
        {
            // Sends an instance of shift to the DB, with the data from the EditForm
            await Http.PostAsJsonAsync<Shift>("shiftController/create", s);

            // Refreshes the list of shifts after saving the new instance, to include it in the shown list
            shifts = await Http.GetFromJsonAsync<List<Shift>>($"shiftController/getAllShifts");

            // String gets changed to confirm the creation of a shift
            OpretText = "Vagt oprettet";
        }
        else
        {
            // If the StateContainer chosen on the homepage doesn't have a roleId of 1
            // Changes OpretText to inform that they don't have the rights to create a shift
            OpretText = "Rettigheder haves ikke";
        }
    }

    public async Task UpdateShift()
    {
        if (StateContainer.RoleId == 1)
        {
            // Updates a shift with a given ShiftId to the info provided in the instance of the same ShiftId (current)
            await Http.PutAsJsonAsync($"shiftController/update?shiftId={current.ShiftId}", current);

            // Refreshes the list of shifts after updating the shift, to include updated data in the shown list
            shifts = await Http.GetFromJsonAsync<List<Shift>>($"shiftController/getAllShifts");

            // String gets changed to confirm the update of a given shift's information
            OpdaterText = "Vagt opdateret";
        }
        else
        {
            // If the StateContainer chosen on the homepage doesn't have a roleId of 1
            // Changes OpdaterText to inform that they don't have the rights to update a shift
            OpdaterText = "Rettigheder haves ikke";
        }
    }

    public async Task DeleteShift()
    {
        if (StateContainer.RoleId == 1)
        {
            // Deletes an assignment with a given ShiftId that is provided to the instance of Shift (deleteShift)
            await Http.DeleteAsync($"shiftController/delete?shiftId={deleteShift.ShiftId}");

            // Refreshes the list of shifts after deleting a given shift, to exclude it in the shown list
            shifts = await Http.GetFromJsonAsync<List<Shift>>($"shiftController/getAllShifts");

            // Changes deleteText to confirm that shift with given ID was deleted
            deleteText = "Vagt slettet";
        }
        else
        {
            // If the StateContainer chosen on the homepage doesn't have a roleId of 1
            // Changes deleteText to inform that they don't have the rights to delete a shift
            deleteText = "Rettigheder haves ikke";
        }
    }
}

