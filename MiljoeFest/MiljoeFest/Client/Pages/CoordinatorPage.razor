@page "/coordinatorpage"
@using MiljoeFest.Client.Shared
@using MiljoeFest.Shared
@using System.Net.Http.Json
@inject HttpClient Http
@inject StateContainer StateContainer;

<PageTitle>Miljøfest | Koordinator</PageTitle>
<h1>Vagt Info</h1>

<p>Indtast opdateringer</p>

<div class="row">
    <div class="col-sm-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Vagtopdatering</h5>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <!--Oprettelse af form som følger modellen for obj "u"-->
                <EditForm Model="@shift" OnValidSubmit="update">

                    <label>Vagt ID:</label>
                    <div>
                        <InputNumber @bind-Value="@shift.ShiftId" placeholder="Id" />
                    </div>

                    <label>Opgave ID:</label>
                    <div>
                        <InputNumber @bind-Value="@shift.AssignmentId" placeholder="Id" />
                    </div>

                    <label>Booked af:</label>
                    <div>
                        <InputNumber @bind-Value="@shift.UserId" placeholder="Frivilig Id" />
                    </div>

                    <label>Lokation:</label>
                    <div>
                        <InputText @bind-Value="@shift.Location" placeholder="Lokation" />
                    </div>

                    <label>Start Tidspunkt:</label>
                    <div>
                        <InputDate @bind-Value="@shift.Start" />
                    </div>

                    <label>Slut Tidspunkt:</label>
                    <div>
                        <InputDate @bind-Value="@shift.End" />
                    </div>

                    <label>Booked:</label>
                    <div>
                        <InputCheckbox @bind-Value="@shift.IsBooked" />
                    </div>

                    <!--Knap sender info til db og redirecter bruger til forsiden igen (href = "/")-->
                    <button type="submit" class="btn btn-success mt-3" href="/">
                        @updateAlert
                    </button>
                    <button class="btn btn-danger mt-3" @onclick="delete">@deleteAlert</button>
                </EditForm>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="card">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Opgaveopdatering</h5>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <!--Oprettelse af form som følger modellen for obj "u"-->
                    <EditForm Model="@assign" OnValidSubmit="updateAssignment">

                        <label>Opgave ID:</label>
                        <div>
                            <InputNumber @bind-Value="@assign.AssignmentId" placeholder="Opgave ID" />
                        </div>

                        <label>Ansvarlig koordinator:</label>
                        <div>
                            <InputNumber @bind-Value="@assign.UserId" placeholder="Koordinator ID" />
                        </div>

                        <label>Opgavenavn:</label>
                        <div>
                            <InputText @bind-Value="@assign.AssignmentName" placeholder="Opgavenavn" />
                        </div>

                        <label>Afdeling:</label>
                        <div>
                            <InputText @bind-Value="@assign.Department" placeholder="Afdelingsnavn" />
                        </div>

                        <!--Knap sender info til db og redirecter bruger til forsiden igen (href = "/")-->
                        <button type="submit" class="btn btn-success mt-3" href="/">
                            @updateAlertA
                        </button>
                        <button class="btn btn-danger mt-3" @onclick="deleteAssignment">@deleteAlertA</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    public string updateAlert = "Opdater Vagt";

    public string deleteAlert = "Slet Vagt";

    public string updateAlertA = "Opdater Opgave";

    public string deleteAlertA = "Slet Opgave";

    public Assignment assign = new();

    public Shift shift = new();

    public async Task delete()
    {
        if (StateContainer.RoleId == 1)
        {
            await Http.DeleteAsync($"shiftController/delete?shiftId={shift.ShiftId}");

        }
        else
        {
            deleteAlert = "Rettigheder haves ikke";
        }
    }

    public async Task update()
    {
        if (StateContainer.RoleId == 1)
        {

            await Http.PutAsJsonAsync($"shiftController/update?shiftId={shift.ShiftId}", shift);
        }
        else
        {
            updateAlert = "Rettigheder haves ikke";
        }
    }

    public async Task deleteAssignment()
    {
        if (StateContainer.RoleId == 1)
        {
            await Http.DeleteAsync($"assignmentController/deleteAssignment?assignmentId={assign.AssignmentId}");
        }
        else
        {
            updateAlertA = "Rettigheder haves ikke";
        }

    }

    public async Task updateAssignment()
    {
        if (StateContainer.RoleId == 1)
        {

            await Http.PutAsJsonAsync($"assignmentController/updateAssignment?AssignmentId={assign.AssignmentId}", assign);
        }
        else
        {
            updateAlertA = "Rettigheder haves ikke";
        }
    }
}
